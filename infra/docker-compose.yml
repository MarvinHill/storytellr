version: '3'
services:

  proxy:
    container_name: proxy
    image: traefik:v3.0
    # Enables the web UI and tells Traefik to listen to docker
    restart: unless-stopped
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  api:
    container_name: api
    build: ../api
    restart: unless-stopped

  webapp:
    container_name: webapp
    build: ../webapp

  apidb:
    container_name: apidb
    image: postgres:16.2-alpine3.18
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${API_DATABASE_PASSWORD}
      POSTGRES_USER: ${API_DATABASE_USER}
      POSTGRES_DB: ${API_DATABASE_NAME}
    volumes:
      - apidb:/var/lib/postgresql/data

  keycloakdb:
    container_name: keycloakdb
    image: postgres:16.2-alpine3.18
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}
      POSTGRES_USER: ${KEYCLOAK_DATABASE_USER}
      POSTGRES_DB: ${KEYCLOAK_DATABASE_NAME}
    volumes:
      - keycloakdb:/var/lib/postgresql/data

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0
    restart: unless-stopped
    command: start-dev
    ports:
      - 8092:8080
    environment:
      KC_DB: ${KEYCLOAK_DATABASE_VENDOR}
      KC_DB_URL_DATABASE: ${KEYCLOAK_DATABASE_NAME}
      KC_DB_SCHEMA: ${KEYCLOAK_DB_SCHEMA}
      KC_DB_URL: ${KEYCLOAK_DB_URL}

      KC_DB_USERNAME: ${KEYCLOAK_DATABASE_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DATABASE_PASSWORD}      

      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

      KC_HTTP_RELATIVE_PATH: ${KEYCLOAK_HTTP_RELATIVE_PATH}
   #volumes:
   #   - ./keycloak/themes:/opt/bitnami/keycloak/themes

volumes:
  keycloakdb:
  apidb: